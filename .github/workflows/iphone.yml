name: Build iOS App

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: macos-14

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install Xcode Command Line Tools
      run: |
        sudo xcode-select --install || true
        sudo xcode-select --switch /Applications/Xcode.app/Contents/Developer || true
    
    - name: Install Flet and dependencies
      run: |
        pip install flet flet-audio pyinstaller
        pip install --upgrade setuptools wheel
    
    - name: Detect main file
      run: |
        if [ -f "gioco.py" ]; then
          echo "MAIN_FILE=gioco.py" >> $GITHUB_ENV
        elif [ -f "main.py" ]; then
          echo "MAIN_FILE=main.py" >> $GITHUB_ENV
        else
          echo "MAIN_FILE=avventura_epica.py" >> $GITHUB_ENV
        fi
    
    - name: Check assets
      run: |
        echo "Checking for existing assets..."
        if [ -d "assets" ]; then
          echo "Assets folder found:"
          find assets -name "*.wav" -o -name "*.mp3" | sort
          AUDIO_COUNT=$(find assets -name "*.wav" -o -name "*.mp3" | wc -l)
          echo "Total audio files: $AUDIO_COUNT"
        else
          echo "No assets folder found, creating minimal structure..."
          mkdir -p assets
          for i in {1..18}; do touch "assets/$i.wav"; done
          echo "Created placeholder files 1.wav to 18.wav"
        fi
    
    - name: Create Info.plist
      run: |
        mkdir -p ios_build
        cat > ios_build/Info.plist << 'EOF'
        <?xml version="1.0" encoding="UTF-8"?>
        <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
        <plist version="1.0">
        <dict>
            <key>CFBundleDisplayName</key>
            <string>Avventura Epica</string>
            <key>CFBundleExecutable</key>
            <string>AvventuraEpica</string>
            <key>CFBundleIdentifier</key>
            <string>com.ambro86.avventuraepica</string>
            <key>CFBundleName</key>
            <string>AvventuraEpica</string>
            <key>CFBundlePackageType</key>
            <string>APPL</string>
            <key>CFBundleShortVersionString</key>
            <string>1.0</string>
            <key>CFBundleVersion</key>
            <string>1</string>
            <key>LSRequiresIPhoneOS</key>
            <true/>
            <key>UILaunchStoryboardName</key>
            <string>LaunchScreen</string>
            <key>UIRequiredDeviceCapabilities</key>
            <array>
                <string>armv7</string>
            </array>
            <key>UISupportedInterfaceOrientations</key>
            <array>
                <string>UIInterfaceOrientationPortrait</string>
                <string>UIInterfaceOrientationLandscapeLeft</string>
                <string>UIInterfaceOrientationLandscapeRight</string>
            </array>
            <key>UIAccessibilityTraits</key>
            <string>UIAccessibilityTraitPlaysSound</string>
            <key>UIAccessibilityLanguage</key>
            <string>it</string>
            <key>NSMicrophoneUsageDescription</key>
            <string>Questa app usa l'audio per l'accessibilit√†</string>
        </dict>
        </plist>
        EOF
    
    - name: Build with Flet
      run: |
        echo "Creating Flet iOS project..."
        
        # Prova diversi approcci per iOS
        if flet build ios $MAIN_FILE --name AvventuraEpica --bundle-id com.ambro86.avventuraepica; then
          echo "‚úÖ Flet build ios successful"
        elif flet pack $MAIN_FILE --name AvventuraEpica --add-data "assets:assets"; then
          echo "‚úÖ Flet pack successful"
        else
          echo "‚ùå Both flet commands failed, creating manual structure"
          # Crea struttura manuale
          mkdir -p build/ios/AvventuraEpica.app
          cp $MAIN_FILE build/ios/AvventuraEpica.app/
          cp -r assets build/ios/AvventuraEpica.app/ 2>/dev/null || true
          cp ios_build/Info.plist build/ios/AvventuraEpica.app/
        fi
    
    - name: Create IPA structure
      run: |
        echo "Creating IPA package structure..."
        
        # Trova la directory di build di Flet
        if [ -d "build" ]; then
          BUILD_DIR="build"
        elif [ -d "dist" ]; then
          BUILD_DIR="dist"
        else
          BUILD_DIR="."
        fi
        
        # Crea struttura IPA
        mkdir -p Payload
        
        # Trova l'app bundle o creane uno
        if find $BUILD_DIR -name "*.app" -type d | head -1 | xargs -I {} cp -r {} Payload/; then
          echo "‚úÖ Found and copied .app bundle"
        else
          echo "‚ö†Ô∏è No .app bundle found, creating one manually"
          mkdir -p Payload/AvventuraEpica.app
          
          # Copia files essenziali
          cp $MAIN_FILE Payload/AvventuraEpica.app/
          cp -r assets Payload/AvventuraEpica.app/ 2>/dev/null || true
          cp ios_build/Info.plist Payload/AvventuraEpica.app/
          
          # Crea un eseguibile dummy (non funzioner√† ma evita errori di struttura)
          echo '#!/bin/bash\necho "iOS App"' > Payload/AvventuraEpica.app/AvventuraEpica
          chmod +x Payload/AvventuraEpica.app/AvventuraEpica
        fi
        
        # Assicurati che ci sia Info.plist
        find Payload -name "*.app" -exec cp ios_build/Info.plist {}/Info.plist \;
        
        # Crea il file IPA
        zip -r AvventuraEpica-iOS.ipa Payload/
        
        echo "üì± IPA created: AvventuraEpica-iOS.ipa"
        ls -la AvventuraEpica-iOS.ipa
    
    - name: Verify IPA structure
      run: |
        echo "üîç Verifying IPA structure..."
        unzip -l AvventuraEpica-iOS.ipa | head -20
        
        # Verifica Info.plist
        if unzip -l AvventuraEpica-iOS.ipa | grep -q "Info.plist"; then
          echo "‚úÖ Info.plist found in IPA"
        else
          echo "‚ùå Info.plist missing from IPA"
        fi
    
    - name: Upload IPA
      uses: actions/upload-artifact@v4
      with:
        name: AvventuraEpica-iOS
        path: |
          AvventuraEpica-iOS.ipa
          Payload/
        retention-days: 30